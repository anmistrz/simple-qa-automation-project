pipeline {
    agent any

    tools {
        // Install the Maven version configured as "3.9.9" and add it to the path.
        maven "3.9.9"
    }

    stages {
        stage('Pull') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/anmistrz/simple-qa-automation-project.git'

                sh "cd final_project_qa"
                sh "pwd final_project_qa"
                sh "docker compose down"
                sh "mvn clean install"

                // // Run Maven on a Unix agent.
                // sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
            
        }

        stage('Test') {
            steps {
                // Get some code from a GitHub repository
                sh "cd final_project_qa"
                sh "mvn test -PTestng1  -Dbrowser=chrome"
                echo "Test completed"
                sh "cd target/cucumber-report.html"
                sh "ls -a"
            }
        }

        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                sh "cd final_project_qa"
                sh "target/cucumber-report.html"
                sh """
                        cat report.js
                        cat formatter.js
                        cat index.html
                        cat jquery-3.4.1.min.js
                    """
                sh "docker compose build"
                echo "Build completed"
            }
        }

        stage('Deploy') {
            steps {
                // Get some code from a GitHub repository
                sh "cd final_project_qa"
                sh "docker compose up -d"
                echo "Deploy completed"
            }
        }

        stage('Clean') {
            steps {
                // Get some code from a GitHub repository
                sh "cd final_project_qa"
                sh "mvn clean install"
                echo "Clean completed"
            }
        }

        post {
            // If Maven was able to run the tests, even if some of the test
            // failed, record the test results and archive the jar file.
            success {
                junit '**/target/surefire-reports/TEST-*.xml'
                archiveArtifacts 'target/*.jar'
            }

            failure {
                echo "Build failed"
            }

            always {
                echo "Pipeline completed"
            }
        }
    }
}