pipeline {
    agent any

    environment {
        // Definisikan variabel lingkungan jika diperlukan
        // Misalnya untuk kredensial, server, dll.
        DEPLOY_SERVER = 'your.deploy.server'
        BRANCH_NAME = 'main'
    }

    tools {
        // Install the Maven version configured as "3.9.9" and add it to the path.
        maven "3.9.9"
    }

    stages {
        stage('Pull') {
            steps {
                // Get some code from a GitHub repository
                git branch: "${env.BRANCH_NAME}", url: 'https://github.com/anmistrz/simple-qa-automation-project.git'

                bat "cd final_project_qa"
                bat "dir /s"
                bat "docker compose down"
                bat "mvn clean install"

                // // Run Maven on a Unix agent.
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

        }

        stage('Test') {
            steps {
                // Get some code from a GitHub repository
                bat "cd final_project_qa"
                bat "mvn test -PTestng1  -Dbrowser=chrome"
                echo "Test completed"
                bat "cd target/cucumber-report.html"
                bat "dir /s"
            }
        }

        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                bat "cd final_project_qa"
                bat "target/cucumber-report.html"
                bat """
                        cat report.js
                        cat formatter.js
                        cat index.html
                        cat jquery-3.4.1.min.js
                    """
                bat "docker compose build"
                echo "Build completed"
            }
        }

        stage('Deploy') {
            steps {
                // Get some code from a GitHub repository
                bat "cd final_project_qa"
                bat "docker compose up -d"
                echo "Deploy completed"
            }
        }

        stage('Clean') {
            steps {
                // Get some code from a GitHub repository
                bat "cd final_project_qa"
                bat "mvn clean install"
                echo "Clean completed"
            }
        }
    }

    post {
        // If Maven was able to run the tests, even if some of the test
        // failed, record the test results and archive the jar file.
        success {
            junit '**/target/surefire-reports/TEST-*.xml'
            archiveArtifacts 'target/*.jar'
        }

        failure {
            echo "Build failed"
        }

        always {
            echo "Pipeline completed"
        }
    }
}

